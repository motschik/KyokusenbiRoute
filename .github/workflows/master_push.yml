# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: マスターブランチへのプッシュ時にビルド・デプロイ

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: prod
    steps:
    - uses: actions/checkout@v4
    - name: Javaセットアップ JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: バージョンアップ
      run: mvn versions:set -DremoveSnapshot
    - name: Mavenビルド
      run: mvn -B package --file pom.xml
    - name: ビルド成果物のアップロード
      run: |
        mkdir staging
        cp target/*.jar staging
    - uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: staging

  version-up:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Javaセットアップ JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: SNAPSHOTを外す
      run: mvn versions:set -DremoveSnapshot
    - run: |
        git config --local user.email "motschik@users.noreply.github.com"
        git config --local user.name "motschik"
        git add pom.xml
        git commit -m "Remove snapshot."
        git push
    - name: タグ付け
      run: |
        VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
        git tag ${VERSION}
        git push origin ${VERSION}
    - name: ビルド成果物のダウンロード
      uses: actions/download-artifact@v3
      with:
        name: artifact
    - name: バージョンアップ
      run: mvn versions:set -DnextSnapshot
    - run: |
        git add pom.xml
        git commit -m "Set next version with SNAPSHOT."
        git push
    - run : ls -l
    - name: Create Release
      run: gh release create ${VERSION} --generate-notes KyokusenbiRoute-*.jar
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  stop-application:
    runs-on: ubuntu-latest
    environment:
      name: prod
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: アプリケーションの停止
      uses: appleboy/ssh-action@v1.2.0
      env:
        APP_PATH: ${{ secrets.APP_PATH }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        envs: APP_PATH
        script_path: scripts/stop_application.sh

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: prod
    needs: [build, stop-application]
    steps:
    - uses: actions/checkout@v4
    - name: ビルド成果物のダウンロード
      uses: actions/download-artifact@v3
      with:
        name: artifact
    - uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        source: "KyokusenbiRoute-*.jar"
        target: ${{ secrets.APP_PATH }}
        overwrite: true

  start-application:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - uses: actions/checkout@v4
    - name: アプリケーションの開始
      uses: appleboy/ssh-action@v1.2.0
      env:
        APP_PATH: ${{ secrets.APP_PATH }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        envs: APP_PATH
        script_path: scripts/start_application.sh
